{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "be9e77c9c2a4a6faeb3d9c64ec08d06f",
    "entities": [
      {
        "tableName": "subject",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`subject_id` TEXT NOT NULL, `name` TEXT NOT NULL, `iconUrl` TEXT NOT NULL, `colorName` TEXT NOT NULL, PRIMARY KEY(`subject_id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "subject_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "iconUrl",
            "columnName": "iconUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "colorName",
            "columnName": "colorName",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "subject_id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "event",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`event_id` TEXT NOT NULL, `timestamp` INTEGER NOT NULL, `order` INTEGER NOT NULL, `date` TEXT NOT NULL, `room` TEXT NOT NULL, `subject_id` TEXT NOT NULL, `teacher_ids` TEXT NOT NULL, `group_id` TEXT NOT NULL, `type` TEXT NOT NULL, `name` TEXT NOT NULL, `icon_url` TEXT NOT NULL, `color` TEXT NOT NULL, PRIMARY KEY(`event_id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "event_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "room",
            "columnName": "room",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "subjectId",
            "columnName": "subject_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "teacherIds",
            "columnName": "teacher_ids",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "groupId",
            "columnName": "group_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "iconUrl",
            "columnName": "icon_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "event_id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "course_content",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`content_id` TEXT NOT NULL, `course_id` TEXT NOT NULL, `section_id` TEXT NOT NULL, `name` TEXT NOT NULL, `attachments` TEXT NOT NULL, `description` TEXT NOT NULL, `details` TEXT NOT NULL, `commentsEnabled` INTEGER NOT NULL, `contentType` TEXT NOT NULL, `created_date` TEXT NOT NULL, `timestamp` INTEGER NOT NULL, `completion_date` INTEGER, PRIMARY KEY(`content_id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "content_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "courseId",
            "columnName": "course_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sectionId",
            "columnName": "section_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "attachments",
            "columnName": "attachments",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "details",
            "columnName": "details",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "commentsEnabled",
            "columnName": "commentsEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentType",
            "columnName": "contentType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdDate",
            "columnName": "created_date",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "completionDate",
            "columnName": "completion_date",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "content_id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "user",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `firstName` TEXT NOT NULL, `surname` TEXT NOT NULL, `user_group_id` TEXT, `role` TEXT NOT NULL, `phoneNum` TEXT NOT NULL, `email` TEXT, `photoUrl` TEXT NOT NULL, `gender` INTEGER NOT NULL, `admin` INTEGER NOT NULL, `patronymic` TEXT, `generatedAvatar` INTEGER NOT NULL, `user_timestamp` INTEGER NOT NULL, PRIMARY KEY(`user_id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "firstName",
            "columnName": "firstName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "surname",
            "columnName": "surname",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "groupUuid",
            "columnName": "user_group_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "role",
            "columnName": "role",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "phoneNum",
            "columnName": "phoneNum",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "photoUrl",
            "columnName": "photoUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "gender",
            "columnName": "gender",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "admin",
            "columnName": "admin",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "patronymic",
            "columnName": "patronymic",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "generatedAvatar",
            "columnName": "generatedAvatar",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "user_timestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "user_id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "day",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`day_id` TEXT NOT NULL, `date` TEXT NOT NULL, `group_id` TEXT NOT NULL, PRIMARY KEY(`day_id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "day_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "groupId",
            "columnName": "group_id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "day_id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "group",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`group_id` TEXT NOT NULL, `group_name` TEXT NOT NULL, `curator_id` TEXT NOT NULL, `course` INTEGER NOT NULL, `specialty_id` TEXT NOT NULL, `group_timestamp` INTEGER NOT NULL, PRIMARY KEY(`group_id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "group_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "group_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "curatorId",
            "columnName": "curator_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "course",
            "columnName": "course",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "specialtyId",
            "columnName": "specialty_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "group_timestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "group_id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "specialty",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`specialty_id` TEXT NOT NULL, `name` TEXT NOT NULL, PRIMARY KEY(`specialty_id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "specialty_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "specialty_id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "course",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`course_id` TEXT NOT NULL, `name` TEXT NOT NULL, `subject_id` TEXT NOT NULL, `teacher_id` TEXT NOT NULL, PRIMARY KEY(`course_id`), FOREIGN KEY(`teacher_id`) REFERENCES `user`(`user_id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "course_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "subjectId",
            "columnName": "subject_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "teacherId",
            "columnName": "teacher_id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "course_id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_course_subject_id",
            "unique": false,
            "columnNames": [
              "subject_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_course_subject_id` ON `${TABLE_NAME}` (`subject_id`)"
          },
          {
            "name": "index_course_teacher_id",
            "unique": false,
            "columnNames": [
              "teacher_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_course_teacher_id` ON `${TABLE_NAME}` (`teacher_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "teacher_id"
            ],
            "referencedColumns": [
              "user_id"
            ]
          }
        ]
      },
      {
        "tableName": "teacher_event",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`event_id` TEXT NOT NULL, `user_id` TEXT NOT NULL, PRIMARY KEY(`event_id`, `user_id`), FOREIGN KEY(`user_id`) REFERENCES `user`(`user_id`) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, FOREIGN KEY(`event_id`) REFERENCES `event`(`event_id`) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "eventId",
            "columnName": "event_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "teacherId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "event_id",
            "user_id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_teacher_event_event_id",
            "unique": false,
            "columnNames": [
              "event_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_teacher_event_event_id` ON `${TABLE_NAME}` (`event_id`)"
          },
          {
            "name": "index_teacher_event_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_teacher_event_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "user_id"
            ]
          },
          {
            "table": "event",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "event_id"
            ],
            "referencedColumns": [
              "event_id"
            ]
          }
        ]
      },
      {
        "tableName": "group_course",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`group_id` TEXT NOT NULL, `course_id` TEXT NOT NULL, PRIMARY KEY(`group_id`, `course_id`), FOREIGN KEY(`group_id`) REFERENCES `group`(`group_id`) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, FOREIGN KEY(`course_id`) REFERENCES `course`(`course_id`) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "groupId",
            "columnName": "group_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "courseUuid",
            "columnName": "course_id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "group_id",
            "course_id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_group_course_group_id",
            "unique": false,
            "columnNames": [
              "group_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_group_course_group_id` ON `${TABLE_NAME}` (`group_id`)"
          },
          {
            "name": "index_group_course_course_id",
            "unique": false,
            "columnNames": [
              "course_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_group_course_course_id` ON `${TABLE_NAME}` (`course_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "group",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "group_id"
            ],
            "referencedColumns": [
              "group_id"
            ]
          },
          {
            "table": "course",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "course_id"
            ],
            "referencedColumns": [
              "course_id"
            ]
          }
        ]
      },
      {
        "tableName": "section",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`section_id` TEXT NOT NULL, `course_id` TEXT NOT NULL, `name` TEXT NOT NULL, `order` INTEGER NOT NULL, PRIMARY KEY(`section_id`), FOREIGN KEY(`course_id`) REFERENCES `course`(`course_id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "section_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "courseId",
            "columnName": "course_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "section_id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "course",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "course_id"
            ],
            "referencedColumns": [
              "course_id"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'be9e77c9c2a4a6faeb3d9c64ec08d06f')"
    ]
  }
}