import com.denchic45.stuiversity.api.course.element.model.AttachmentType;
import kotlin.Boolean;

CREATE TABLE attachmentEntity (
attachment_id TEXT NOT NULL UNIQUE PRIMARY KEY,
attachment_name TEXT NOT NULL,
url TEXT,
thumbnail_url TEXT,
type TEXT AS AttachmentType NOT NULL,
path TEXT,
owner_id TEXT,
sync INTEGER AS Boolean NOT NULL
);

upsert:
INSERT INTO attachmentEntity
VALUES ?
ON CONFLICT(attachment_id)
DO UPDATE SET
attachment_name = excluded.attachment_name,
url = excluded.url,
thumbnail_url = excluded.thumbnail_url,
type = excluded.type,
path = excluded.path,
owner_id = excluded.owner_id;

updateSync:
UPDATE attachmentEntity
SET sync =: sync
WHERE attachment_id =: id;

upsertReference:
INSERT OR IGNORE INTO attachmentRefEntity (attachment_id, entity_id)
VALUES (?, ?);

getByDirPath:
SELECT * FROM attachmentEntity
WHERE path LIKE (:path || '%');

getByReference:
SELECT a.* FROM attachmentEntity a
JOIN attachmentRefEntity ar ON a.attachment_id = ar.attachment_id
WHERE ar.entity_id =: entityID;

getUnreferenced:
SELECT a.attachment_id FROM attachmentEntity a
LEFT JOIN attachmentRefEntity ar ON a.attachment_id = ar.attachment_id
WHERE ar.attachment_id ISNULL;

delete:
DELETE FROM attachmentEntity WHERE attachment_id =: id;