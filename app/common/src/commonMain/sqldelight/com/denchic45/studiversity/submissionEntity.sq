import kotlin.collections.List;

CREATE TABLE submissionEntity (
submission_id TEXT NOT NULL UNIQUE PRIMARY KEY,
student_id TEXT NOT NULL,
work_id TEXT NOT NULL,
course_id TEXT NOT NULL,
status TEXT NOT NULL,
text TEXT ,
attachments TEXT AS List<String>,
teacher_id TEXT,
cause TEXT,
grade INTEGER,
graded_date INTEGER,
rejectd_date INTEGER,
submitted_date INTEGER,
timestamp INTEGER NOT NULL
);

upsert:
INSERT INTO submissionEntity VALUES ?
ON CONFLICT (submission_id)
DO UPDATE SET
status = excluded.status,
text = excluded.text,
attachments = excluded.attachments,
cause = excluded.cause,
grade = excluded.grade,
graded_date = excluded.graded_date,
rejectd_date = excluded.rejectd_date,
submitted_date = excluded.submitted_date,
timestamp = excluded.timestamp;

getByWorkIdAndUserId:
SELECT * FROM submissionEntity s
WHERE work_id =: contentId AND student_id =: studentId;

getSubmissionsAndStudentsByTaskId:
SELECT * FROM submissionEntity s
JOIN userEntity u ON u.user_id = s.student_id
WHERE work_id =: taskId;

-- getStudentsWithoutSubmission:
-- SELECT
--   u.*
-- FROM
--   userEntity u
--   LEFT JOIN submissionEntity s ON s.student_id = u.user_id
-- WHERE
--   u.user_group_id IN(
--     SELECT
--       u.user_group_id
--     FROM
--       userEntity uu
--       JOIN groupCourseEntity gc ON u.user_group_id = gc.group_id
--       JOIN courseContentEntity cc ON gc.course_id = cc.course_id
--     WHERE
--       cc.content_id =:taskId
--   )
--   AND s.student_id IS NULL;

deleteByContentId:
DELETE FROM submissionEntity
WHERE work_id =: id;