CREATE TABLE IF NOT EXISTS groupEntity (
group_id TEXT NOT NULL UNIQUE PRIMARY KEY,
group_name TEXT NOT NULL,
curator_id TEXT NOT NULL,
course INTEGER AS Int NOT NULL,
specialty_id TEXT NOT NULL,
headman_id TEXT,
timestamp INTEGER NOT NULL
);

CREATE VIEW groupWithCuratorAndSpecialty AS
SELECT * FROM groupEntity g
JOIN userEntity u ON u.user_id = g.curator_id
JOIN specialtyEntity s ON s.specialty_id = g.specialty_id;

upsert:
INSERT INTO groupEntity
VALUES ?
ON CONFLICT(group_id)
DO UPDATE SET
group_name = excluded.group_name,
curator_id = excluded.curator_id,
course = excluded.course,
specialty_id = excluded.specialty_id,
headman_id = excluded.headman_id,
timestamp = excluded.timestamp;

getWithCuratorAndSpecialtyById:
SELECT * FROM groupEntity g
JOIN userEntity  u ON g.curator_id = u.user_id
JOIN specialtyEntity s ON g.specialty_id = s.specialty_id
WHERE group_id =:groupId;

getNameById:
SELECT group_name FROM groupEntity
WHERE group_id =:groupId;

isExist:
SELECT EXISTS(
SELECT * FROM groupEntity
WHERE group_id = :id
);

deleteById:
DELETE FROM groupEntity
WHERE group_id =:groupId;

getWithCuratorAndSpecialtyByStudentId:
SELECT * FROM groupEntity g
JOIN userEntity u ON g.group_id = u.user_group_id
JOIN specialtyEntity s ON g.specialty_id = s.specialty_id
WHERE u.user_id =:userId;

getWithCuratorAndSpecialtyByCuratorId:
SELECT * FROM groupWithCuratorAndSpecialty
WHERE curator_id =: userId;

getGroupIdByCuratorId:
SELECT group_id FROM groupWithCuratorAndSpecialty
WHERE curator_id =: userId;